The user inputs a number of integers and they are added to another integer `sum` unless it becomes greater than `INT_MAX`. As `INT_MAX` is equal to the maximum value an integer can store, so if `sum` or `i` become greater than `INT_MAX` these will overflow and wrap around. To prevent that the while loop first checks if adding another integer crosses the `INT_MAX` limit of `sum` and `i` is less than the number of inputs given by the user, otherwise, it breaks the loop without adding another integer to it. So, the code is not vulnerable to integer overflow. 